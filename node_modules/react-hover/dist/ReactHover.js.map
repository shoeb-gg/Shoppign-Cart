{"version":3,"sources":["../src/ReactHover.js"],"names":["propTypes","children","PropTypes","array","isRequired","options","object","className","string","renderItem","item","index","type","name","props","ReactHover","display","position","hoverComponentStyle","updateHoverComponentStyle","setVisibility","flag","updatedStyles","getCursorPos","e","cursorX","pageX","cursorY","pageY","followCursor","shiftX","shiftY","isNaN","top","left","childrenWithProps","child","push","React","cloneElement","styles","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Hover from './lib/Hover'\nimport Trigger from './lib/Trigger'\nimport PropTypes from 'prop-types'\n\nconst propTypes = {\n  children: PropTypes.array.isRequired,\n  options: PropTypes.object.isRequired,\n  className: PropTypes.string,\n}\n\nfunction renderItem(item, index) {\n  if (item.type.name === 'Trigger' || item.props.type === 'trigger') {\n    return <Trigger key={index}>{item}</Trigger>\n  } else if (item.type.name === 'Hover' || item.props.type === 'hover') {\n    return <Hover key={index}>{item}</Hover>\n  }\n}\n\nfunction ReactHover(props) {\n  let [hoverComponentStyle, updateHoverComponentStyle] = useState({\n    display: 'none',\n    position: 'absolute',\n  })\n\n  const setVisibility = flag => {\n    let updatedStyles = null\n    if (flag) {\n      updatedStyles = { ...hoverComponentStyle, display: 'block' }\n    } else {\n      updatedStyles = { ...hoverComponentStyle, display: 'none' }\n    }\n    updateHoverComponentStyle(updatedStyles)\n  }\n\n  const getCursorPos = e => {\n    const cursorX = e.pageX\n    const cursorY = e.pageY\n    let {\n      options: { followCursor, shiftX, shiftY },\n    } = props\n    let updatedStyles = null\n    if (!followCursor) {\n      return\n    }\n    if (isNaN(shiftX)) {\n      shiftX = 0\n    }\n    if (isNaN(shiftY)) {\n      shiftY = 0\n    }\n    updatedStyles = {\n      ...hoverComponentStyle,\n      top: cursorY + shiftY,\n      left: cursorX + shiftX,\n    }\n    updateHoverComponentStyle(updatedStyles)\n  }\n\n  let childrenWithProps = []\n  for (let child of props.children) {\n    if (child.props) {\n      if (child.type.name === 'Trigger' || child.props.type === 'trigger') {\n        childrenWithProps.push(\n          React.cloneElement(child, {\n            setVisibility: setVisibility,\n            getCursorPos: getCursorPos,\n          }),\n        )\n      } else if (child.type.name === 'Hover' || child.props.type === 'hover') {\n        childrenWithProps.push(\n          React.cloneElement(child, {\n            styles: hoverComponentStyle,\n            setVisibility: setVisibility,\n            getCursorPos: getCursorPos,\n          }),\n        )\n      }\n    }\n  }\n\n  return (\n    <div>{childrenWithProps.map((item, index) => renderItem(item, index))}</div>\n  )\n}\n\nReactHover.propTypes = propTypes\n\nexport { Trigger, Hover }\nexport default ReactHover\n"],"file":"ReactHover.js"}