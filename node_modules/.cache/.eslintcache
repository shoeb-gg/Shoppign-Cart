[{"C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\index.js":"1","C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\App.js":"2","C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\components\\Products.js":"3","C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\components\\Navbar.js":"4","C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\components\\Card.js":"5"},{"size":201,"mtime":1635890479893,"results":"6","hashOfConfig":"7"},{"size":329,"mtime":1636973854245,"results":"8","hashOfConfig":"7"},{"size":728,"mtime":1636973315068,"results":"9","hashOfConfig":"7"},{"size":1724,"mtime":1636973849721,"results":"10","hashOfConfig":"7"},{"size":1528,"mtime":1636956162810,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"499rsp",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\index.js",[],["25","26"],"C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\App.js",["27"],"C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\components\\Products.js",["28"],"import React, { useEffect, useState } from \"react\";\r\nimport CardProduct from \"./Card\";\r\nimport style from \"../resources/products.css\";\r\n\r\nexport default function Products() {\r\n  const [prod, setProd] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const getData = async () => {\r\n    const response = await fetch(\"https://fakestoreapi.com/products\");\r\n\r\n    const data = await response.json();\r\n    console.log(data);\r\n    setProd(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"produ\">\r\n      {prod.map((prods) => (\r\n        <CardProduct\r\n          key={prods.title}\r\n          title={prods.title}\r\n          image={prods.image}\r\n          price={prods.price}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\components\\Navbar.js",[],"C:\\Users\\Shoeb\\Desktop\\React apps\\shop\\src\\components\\Card.js",["29","30"],"import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport style from \"../resources/card.css\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CardProduct = ({ title, image, price }) => {\r\n  const [count, setCount] = useState(\"Add to Cart\");\r\n  const handleClick = () => {\r\n    if (count === \"Add to Cart\") {\r\n      setCount(parseInt(1));\r\n      return;\r\n    }\r\n    setCount(count + 1);\r\n  };\r\n  const redoCount = () => {\r\n    setCount(\"Add to Cart\");\r\n  };\r\n  price = 10 * Math.ceil(price);\r\n  return (\r\n    <div className=\"c\">\r\n      <Card className=\"text-center\" className=\"cStyle\">\r\n        <Card.Img variant=\"top\" src={image} className=\"cImg\" />\r\n        <Card.Body className=\"txt\">\r\n          <Card.Text className=\"ti\">{title}</Card.Text>\r\n          <Card.Text className=\"pri\">{price}/=</Card.Text>\r\n        </Card.Body>\r\n\r\n        <ButtonGroup className=\"\">\r\n          <Button\r\n            className=\"bton\"\r\n            onClick={handleClick}\r\n            variant=\"success\"\r\n            size=\"sm\"\r\n          >\r\n            {count}\r\n          </Button>\r\n          <Button onClick={redoCount} variant=\"info\">\r\n            <FontAwesomeIcon icon={faRedo} className=\"text-white\" size=\"lg\" />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default CardProduct;\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":6,"column":21,"nodeType":"37","messageId":"38","endLine":6,"endColumn":33},{"ruleId":"35","severity":1,"message":"39","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":13},{"ruleId":"35","severity":1,"message":"39","line":4,"column":8,"nodeType":"37","messageId":"38","endLine":4,"endColumn":13},{"ruleId":"40","severity":1,"message":"41","line":24,"column":37,"nodeType":"42","messageId":"43","endLine":24,"endColumn":55},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'setCartCount' is assigned a value but never used.","Identifier","unusedVar","'style' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]