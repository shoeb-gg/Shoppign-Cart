{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CSE_01\\\\Desktop\\\\New folder\\\\src\\\\components\\\\Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport style from \"../resources/card.css\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardProduct = _ref => {\n  _s();\n\n  let {\n    title,\n    image,\n    price,\n    updateCartCount,\n    rewindCarCount,\n    desc\n  } = _ref;\n  const [count, setCount] = useState(\"Add to Cart\");\n\n  const handleClick = () => {\n    updateCartCount();\n\n    if (count === \"Add to Cart\") {\n      setCount(parseInt(1));\n      return;\n    }\n\n    setCount(count + 1);\n  };\n\n  const redoCount = () => {\n    rewindCarCount(count);\n    setCount(\"Add to Cart\");\n  };\n\n  price = 10 * Math.ceil(price);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"text-center\",\n      className: \"cStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageAndDes\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"des\",\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: image,\n          className: \"cImg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"txt\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"ti\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"pri\",\n          children: [price, \"/=\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"bton\",\n          onClick: handleClick,\n          variant: \"success\",\n          size: \"sm\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: redoCount,\n          variant: \"info\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faRedo,\n            className: \"text-white\",\n            size: \"lg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardProduct, \"gfYX2Ns4AHrQur4ediWcpQSVtiI=\");\n\n_c = CardProduct;\nexport default CardProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardProduct\");","map":{"version":3,"sources":["C:/Users/CSE_01/Desktop/New folder/src/components/Card.js"],"names":["React","useState","Card","Button","style","ButtonGroup","FontAwesomeIcon","faRedo","CardProduct","title","image","price","updateCartCount","rewindCarCount","desc","count","setCount","handleClick","parseInt","redoCount","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport style from \"../resources/card.css\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRedo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst CardProduct = ({\r\n  title,\r\n  image,\r\n  price,\r\n  updateCartCount,\r\n  rewindCarCount,\r\n  desc,\r\n}) => {\r\n  const [count, setCount] = useState(\"Add to Cart\");\r\n  const handleClick = () => {\r\n    updateCartCount();\r\n    if (count === \"Add to Cart\") {\r\n      setCount(parseInt(1));\r\n      return;\r\n    }\r\n    setCount(count + 1);\r\n  };\r\n  const redoCount = () => {\r\n    rewindCarCount(count);\r\n    setCount(\"Add to Cart\");\r\n  };\r\n  price = 10 * Math.ceil(price);\r\n  return (\r\n    <div className=\"c\">\r\n      \r\n      <Card className=\"text-center\" className=\"cStyle\">\r\n        <div className=\"imageAndDes\">\r\n          <div className=\"des\">{desc}</div>\r\n          <Card.Img variant=\"top\" src={image} className=\"cImg\" />\r\n        </div>\r\n\r\n        <Card.Body className=\"txt\">\r\n          <Card.Text className=\"ti\">{title}</Card.Text>\r\n          <Card.Text className=\"pri\">{price}/=</Card.Text>\r\n        </Card.Body>\r\n\r\n        <ButtonGroup className=\"\">\r\n          <Button\r\n            className=\"bton\"\r\n            onClick={handleClick}\r\n            variant=\"success\"\r\n            size=\"sm\"\r\n          >\r\n            {count}\r\n          </Button>\r\n          <Button onClick={redoCount} variant=\"info\">\r\n            <FontAwesomeIcon icon={faRedo} className=\"text-white\" size=\"lg\" />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default CardProduct;\r\n"]},"metadata":{},"sourceType":"module"}